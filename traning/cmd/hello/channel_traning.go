package main

import "fmt"

// チャネルは、チャネル演算子 <- を使って値の送受信ができる通り道です。
// チャネルは、make(chan 型) で作成します。
// 送信は、<- を使って行います。
// 受信は、変数 := <- チャネル として行います。
// デフォルトでは、送受信はブロックされ、送受信が準備できるまで待機します。
// 以下のコードは、チャネルを使って、goroutine 間でデータを送受信しています。
func ChannelTraining() {
	// チャネルは、データを送受信するためのパイプのようなものです。
	// データは、チャネルを介して送信され、受信されます。
	// チャネルは、make(chan 型) で作成します。
	messages := make(chan string)

	// 以下のコードは、goroutine を使って、メッセージを送信しています。
	go func() { messages <- "ping" }()

	// メイン関数は、メッセージを受信するためにブロックされます。
	msg := <- messages
	fmt.Println(msg)
}